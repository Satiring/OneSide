//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity timeBetweenSpawnsChunkEntity { get { return GetGroup(ConfigMatcher.TimeBetweenSpawnsChunk).GetSingleEntity(); } }
    public TimeBetweenSpawnsChunk timeBetweenSpawnsChunk { get { return timeBetweenSpawnsChunkEntity.timeBetweenSpawnsChunk; } }
    public bool hasTimeBetweenSpawnsChunk { get { return timeBetweenSpawnsChunkEntity != null; } }

    public ConfigEntity SetTimeBetweenSpawnsChunk(float newValue) {
        if (hasTimeBetweenSpawnsChunk) {
            throw new Entitas.EntitasException("Could not set TimeBetweenSpawnsChunk!\n" + this + " already has an entity with TimeBetweenSpawnsChunk!",
                "You should check if the context already has a timeBetweenSpawnsChunkEntity before setting it or use context.ReplaceTimeBetweenSpawnsChunk().");
        }
        var entity = CreateEntity();
        entity.AddTimeBetweenSpawnsChunk(newValue);
        return entity;
    }

    public void ReplaceTimeBetweenSpawnsChunk(float newValue) {
        var entity = timeBetweenSpawnsChunkEntity;
        if (entity == null) {
            entity = SetTimeBetweenSpawnsChunk(newValue);
        } else {
            entity.ReplaceTimeBetweenSpawnsChunk(newValue);
        }
    }

    public void RemoveTimeBetweenSpawnsChunk() {
        timeBetweenSpawnsChunkEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public TimeBetweenSpawnsChunk timeBetweenSpawnsChunk { get { return (TimeBetweenSpawnsChunk)GetComponent(ConfigComponentsLookup.TimeBetweenSpawnsChunk); } }
    public bool hasTimeBetweenSpawnsChunk { get { return HasComponent(ConfigComponentsLookup.TimeBetweenSpawnsChunk); } }

    public void AddTimeBetweenSpawnsChunk(float newValue) {
        var index = ConfigComponentsLookup.TimeBetweenSpawnsChunk;
        var component = (TimeBetweenSpawnsChunk)CreateComponent(index, typeof(TimeBetweenSpawnsChunk));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeBetweenSpawnsChunk(float newValue) {
        var index = ConfigComponentsLookup.TimeBetweenSpawnsChunk;
        var component = (TimeBetweenSpawnsChunk)CreateComponent(index, typeof(TimeBetweenSpawnsChunk));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeBetweenSpawnsChunk() {
        RemoveComponent(ConfigComponentsLookup.TimeBetweenSpawnsChunk);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherTimeBetweenSpawnsChunk;

    public static Entitas.IMatcher<ConfigEntity> TimeBetweenSpawnsChunk {
        get {
            if (_matcherTimeBetweenSpawnsChunk == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.TimeBetweenSpawnsChunk);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherTimeBetweenSpawnsChunk = matcher;
            }

            return _matcherTimeBetweenSpawnsChunk;
        }
    }
}
