//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity buttonBEntity { get { return GetGroup(ConfigMatcher.ButtonB).GetSingleEntity(); } }
    public ButtonBComponent buttonB { get { return buttonBEntity.buttonB; } }
    public bool hasButtonB { get { return buttonBEntity != null; } }

    public ConfigEntity SetButtonB(string newValue) {
        if (hasButtonB) {
            throw new Entitas.EntitasException("Could not set ButtonB!\n" + this + " already has an entity with ButtonBComponent!",
                "You should check if the context already has a buttonBEntity before setting it or use context.ReplaceButtonB().");
        }
        var entity = CreateEntity();
        entity.AddButtonB(newValue);
        return entity;
    }

    public void ReplaceButtonB(string newValue) {
        var entity = buttonBEntity;
        if (entity == null) {
            entity = SetButtonB(newValue);
        } else {
            entity.ReplaceButtonB(newValue);
        }
    }

    public void RemoveButtonB() {
        buttonBEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public ButtonBComponent buttonB { get { return (ButtonBComponent)GetComponent(ConfigComponentsLookup.ButtonB); } }
    public bool hasButtonB { get { return HasComponent(ConfigComponentsLookup.ButtonB); } }

    public void AddButtonB(string newValue) {
        var index = ConfigComponentsLookup.ButtonB;
        var component = (ButtonBComponent)CreateComponent(index, typeof(ButtonBComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceButtonB(string newValue) {
        var index = ConfigComponentsLookup.ButtonB;
        var component = (ButtonBComponent)CreateComponent(index, typeof(ButtonBComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveButtonB() {
        RemoveComponent(ConfigComponentsLookup.ButtonB);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherButtonB;

    public static Entitas.IMatcher<ConfigEntity> ButtonB {
        get {
            if (_matcherButtonB == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.ButtonB);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherButtonB = matcher;
            }

            return _matcherButtonB;
        }
    }
}
