//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity buttonAEntity { get { return GetGroup(ConfigMatcher.ButtonA).GetSingleEntity(); } }
    public ButtonAComponent buttonA { get { return buttonAEntity.buttonA; } }
    public bool hasButtonA { get { return buttonAEntity != null; } }

    public ConfigEntity SetButtonA(string newValue) {
        if (hasButtonA) {
            throw new Entitas.EntitasException("Could not set ButtonA!\n" + this + " already has an entity with ButtonAComponent!",
                "You should check if the context already has a buttonAEntity before setting it or use context.ReplaceButtonA().");
        }
        var entity = CreateEntity();
        entity.AddButtonA(newValue);
        return entity;
    }

    public void ReplaceButtonA(string newValue) {
        var entity = buttonAEntity;
        if (entity == null) {
            entity = SetButtonA(newValue);
        } else {
            entity.ReplaceButtonA(newValue);
        }
    }

    public void RemoveButtonA() {
        buttonAEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public ButtonAComponent buttonA { get { return (ButtonAComponent)GetComponent(ConfigComponentsLookup.ButtonA); } }
    public bool hasButtonA { get { return HasComponent(ConfigComponentsLookup.ButtonA); } }

    public void AddButtonA(string newValue) {
        var index = ConfigComponentsLookup.ButtonA;
        var component = (ButtonAComponent)CreateComponent(index, typeof(ButtonAComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceButtonA(string newValue) {
        var index = ConfigComponentsLookup.ButtonA;
        var component = (ButtonAComponent)CreateComponent(index, typeof(ButtonAComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveButtonA() {
        RemoveComponent(ConfigComponentsLookup.ButtonA);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherButtonA;

    public static Entitas.IMatcher<ConfigEntity> ButtonA {
        get {
            if (_matcherButtonA == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.ButtonA);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherButtonA = matcher;
            }

            return _matcherButtonA;
        }
    }
}
