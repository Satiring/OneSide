//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity speedUpVelocityValueEntity { get { return GetGroup(ConfigMatcher.SpeedUpVelocityValue).GetSingleEntity(); } }
    public SpeedUpVelocityValue speedUpVelocityValue { get { return speedUpVelocityValueEntity.speedUpVelocityValue; } }
    public bool hasSpeedUpVelocityValue { get { return speedUpVelocityValueEntity != null; } }

    public ConfigEntity SetSpeedUpVelocityValue(float newValue) {
        if (hasSpeedUpVelocityValue) {
            throw new Entitas.EntitasException("Could not set SpeedUpVelocityValue!\n" + this + " already has an entity with SpeedUpVelocityValue!",
                "You should check if the context already has a speedUpVelocityValueEntity before setting it or use context.ReplaceSpeedUpVelocityValue().");
        }
        var entity = CreateEntity();
        entity.AddSpeedUpVelocityValue(newValue);
        return entity;
    }

    public void ReplaceSpeedUpVelocityValue(float newValue) {
        var entity = speedUpVelocityValueEntity;
        if (entity == null) {
            entity = SetSpeedUpVelocityValue(newValue);
        } else {
            entity.ReplaceSpeedUpVelocityValue(newValue);
        }
    }

    public void RemoveSpeedUpVelocityValue() {
        speedUpVelocityValueEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public SpeedUpVelocityValue speedUpVelocityValue { get { return (SpeedUpVelocityValue)GetComponent(ConfigComponentsLookup.SpeedUpVelocityValue); } }
    public bool hasSpeedUpVelocityValue { get { return HasComponent(ConfigComponentsLookup.SpeedUpVelocityValue); } }

    public void AddSpeedUpVelocityValue(float newValue) {
        var index = ConfigComponentsLookup.SpeedUpVelocityValue;
        var component = (SpeedUpVelocityValue)CreateComponent(index, typeof(SpeedUpVelocityValue));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSpeedUpVelocityValue(float newValue) {
        var index = ConfigComponentsLookup.SpeedUpVelocityValue;
        var component = (SpeedUpVelocityValue)CreateComponent(index, typeof(SpeedUpVelocityValue));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSpeedUpVelocityValue() {
        RemoveComponent(ConfigComponentsLookup.SpeedUpVelocityValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherSpeedUpVelocityValue;

    public static Entitas.IMatcher<ConfigEntity> SpeedUpVelocityValue {
        get {
            if (_matcherSpeedUpVelocityValue == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.SpeedUpVelocityValue);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherSpeedUpVelocityValue = matcher;
            }

            return _matcherSpeedUpVelocityValue;
        }
    }
}
