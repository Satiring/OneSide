//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity verticalAxisEntity { get { return GetGroup(ConfigMatcher.VerticalAxis).GetSingleEntity(); } }
    public VerticalAxisComponent verticalAxis { get { return verticalAxisEntity.verticalAxis; } }
    public bool hasVerticalAxis { get { return verticalAxisEntity != null; } }

    public ConfigEntity SetVerticalAxis(string newValue) {
        if (hasVerticalAxis) {
            throw new Entitas.EntitasException("Could not set VerticalAxis!\n" + this + " already has an entity with VerticalAxisComponent!",
                "You should check if the context already has a verticalAxisEntity before setting it or use context.ReplaceVerticalAxis().");
        }
        var entity = CreateEntity();
        entity.AddVerticalAxis(newValue);
        return entity;
    }

    public void ReplaceVerticalAxis(string newValue) {
        var entity = verticalAxisEntity;
        if (entity == null) {
            entity = SetVerticalAxis(newValue);
        } else {
            entity.ReplaceVerticalAxis(newValue);
        }
    }

    public void RemoveVerticalAxis() {
        verticalAxisEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public VerticalAxisComponent verticalAxis { get { return (VerticalAxisComponent)GetComponent(ConfigComponentsLookup.VerticalAxis); } }
    public bool hasVerticalAxis { get { return HasComponent(ConfigComponentsLookup.VerticalAxis); } }

    public void AddVerticalAxis(string newValue) {
        var index = ConfigComponentsLookup.VerticalAxis;
        var component = (VerticalAxisComponent)CreateComponent(index, typeof(VerticalAxisComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceVerticalAxis(string newValue) {
        var index = ConfigComponentsLookup.VerticalAxis;
        var component = (VerticalAxisComponent)CreateComponent(index, typeof(VerticalAxisComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveVerticalAxis() {
        RemoveComponent(ConfigComponentsLookup.VerticalAxis);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherVerticalAxis;

    public static Entitas.IMatcher<ConfigEntity> VerticalAxis {
        get {
            if (_matcherVerticalAxis == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.VerticalAxis);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherVerticalAxis = matcher;
            }

            return _matcherVerticalAxis;
        }
    }
}
