//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity horizontalAxisEntity { get { return GetGroup(ConfigMatcher.HorizontalAxis).GetSingleEntity(); } }
    public HorizontalAxisComponent horizontalAxis { get { return horizontalAxisEntity.horizontalAxis; } }
    public bool hasHorizontalAxis { get { return horizontalAxisEntity != null; } }

    public ConfigEntity SetHorizontalAxis(string newValue) {
        if (hasHorizontalAxis) {
            throw new Entitas.EntitasException("Could not set HorizontalAxis!\n" + this + " already has an entity with HorizontalAxisComponent!",
                "You should check if the context already has a horizontalAxisEntity before setting it or use context.ReplaceHorizontalAxis().");
        }
        var entity = CreateEntity();
        entity.AddHorizontalAxis(newValue);
        return entity;
    }

    public void ReplaceHorizontalAxis(string newValue) {
        var entity = horizontalAxisEntity;
        if (entity == null) {
            entity = SetHorizontalAxis(newValue);
        } else {
            entity.ReplaceHorizontalAxis(newValue);
        }
    }

    public void RemoveHorizontalAxis() {
        horizontalAxisEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public HorizontalAxisComponent horizontalAxis { get { return (HorizontalAxisComponent)GetComponent(ConfigComponentsLookup.HorizontalAxis); } }
    public bool hasHorizontalAxis { get { return HasComponent(ConfigComponentsLookup.HorizontalAxis); } }

    public void AddHorizontalAxis(string newValue) {
        var index = ConfigComponentsLookup.HorizontalAxis;
        var component = (HorizontalAxisComponent)CreateComponent(index, typeof(HorizontalAxisComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHorizontalAxis(string newValue) {
        var index = ConfigComponentsLookup.HorizontalAxis;
        var component = (HorizontalAxisComponent)CreateComponent(index, typeof(HorizontalAxisComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHorizontalAxis() {
        RemoveComponent(ConfigComponentsLookup.HorizontalAxis);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherHorizontalAxis;

    public static Entitas.IMatcher<ConfigEntity> HorizontalAxis {
        get {
            if (_matcherHorizontalAxis == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.HorizontalAxis);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherHorizontalAxis = matcher;
            }

            return _matcherHorizontalAxis;
        }
    }
}
