//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity speedUpPositionValueEntity { get { return GetGroup(ConfigMatcher.SpeedUpPositionValue).GetSingleEntity(); } }
    public SpeedUpPositionValue speedUpPositionValue { get { return speedUpPositionValueEntity.speedUpPositionValue; } }
    public bool hasSpeedUpPositionValue { get { return speedUpPositionValueEntity != null; } }

    public ConfigEntity SetSpeedUpPositionValue(float newValue) {
        if (hasSpeedUpPositionValue) {
            throw new Entitas.EntitasException("Could not set SpeedUpPositionValue!\n" + this + " already has an entity with SpeedUpPositionValue!",
                "You should check if the context already has a speedUpPositionValueEntity before setting it or use context.ReplaceSpeedUpPositionValue().");
        }
        var entity = CreateEntity();
        entity.AddSpeedUpPositionValue(newValue);
        return entity;
    }

    public void ReplaceSpeedUpPositionValue(float newValue) {
        var entity = speedUpPositionValueEntity;
        if (entity == null) {
            entity = SetSpeedUpPositionValue(newValue);
        } else {
            entity.ReplaceSpeedUpPositionValue(newValue);
        }
    }

    public void RemoveSpeedUpPositionValue() {
        speedUpPositionValueEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public SpeedUpPositionValue speedUpPositionValue { get { return (SpeedUpPositionValue)GetComponent(ConfigComponentsLookup.SpeedUpPositionValue); } }
    public bool hasSpeedUpPositionValue { get { return HasComponent(ConfigComponentsLookup.SpeedUpPositionValue); } }

    public void AddSpeedUpPositionValue(float newValue) {
        var index = ConfigComponentsLookup.SpeedUpPositionValue;
        var component = (SpeedUpPositionValue)CreateComponent(index, typeof(SpeedUpPositionValue));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSpeedUpPositionValue(float newValue) {
        var index = ConfigComponentsLookup.SpeedUpPositionValue;
        var component = (SpeedUpPositionValue)CreateComponent(index, typeof(SpeedUpPositionValue));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSpeedUpPositionValue() {
        RemoveComponent(ConfigComponentsLookup.SpeedUpPositionValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherSpeedUpPositionValue;

    public static Entitas.IMatcher<ConfigEntity> SpeedUpPositionValue {
        get {
            if (_matcherSpeedUpPositionValue == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.SpeedUpPositionValue);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherSpeedUpPositionValue = matcher;
            }

            return _matcherSpeedUpPositionValue;
        }
    }
}
