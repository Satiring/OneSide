//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity buttonStartEntity { get { return GetGroup(ConfigMatcher.ButtonStart).GetSingleEntity(); } }
    public ButtonStartComponent buttonStart { get { return buttonStartEntity.buttonStart; } }
    public bool hasButtonStart { get { return buttonStartEntity != null; } }

    public ConfigEntity SetButtonStart(string newValue) {
        if (hasButtonStart) {
            throw new Entitas.EntitasException("Could not set ButtonStart!\n" + this + " already has an entity with ButtonStartComponent!",
                "You should check if the context already has a buttonStartEntity before setting it or use context.ReplaceButtonStart().");
        }
        var entity = CreateEntity();
        entity.AddButtonStart(newValue);
        return entity;
    }

    public void ReplaceButtonStart(string newValue) {
        var entity = buttonStartEntity;
        if (entity == null) {
            entity = SetButtonStart(newValue);
        } else {
            entity.ReplaceButtonStart(newValue);
        }
    }

    public void RemoveButtonStart() {
        buttonStartEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public ButtonStartComponent buttonStart { get { return (ButtonStartComponent)GetComponent(ConfigComponentsLookup.ButtonStart); } }
    public bool hasButtonStart { get { return HasComponent(ConfigComponentsLookup.ButtonStart); } }

    public void AddButtonStart(string newValue) {
        var index = ConfigComponentsLookup.ButtonStart;
        var component = (ButtonStartComponent)CreateComponent(index, typeof(ButtonStartComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceButtonStart(string newValue) {
        var index = ConfigComponentsLookup.ButtonStart;
        var component = (ButtonStartComponent)CreateComponent(index, typeof(ButtonStartComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveButtonStart() {
        RemoveComponent(ConfigComponentsLookup.ButtonStart);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherButtonStart;

    public static Entitas.IMatcher<ConfigEntity> ButtonStart {
        get {
            if (_matcherButtonStart == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.ButtonStart);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherButtonStart = matcher;
            }

            return _matcherButtonStart;
        }
    }
}
